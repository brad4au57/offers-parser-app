---
import '../styles/global.css';

// Define the suffix-to-points mapping
const suffixToPoints: Record<string, number> = {
  '01': 25000,
  '02': 15000,
  '02A': 9000,
  '03': 6500,
  '03A': 4000,
  '04': 3000,
  '05': 2000,
  '06': 1500,
  '07': 1200,
};

// Get all JSON files from /src/data subfolders
const files = import.meta.glob('../data/**/*.json', { eager: true }) as Record<
  string,
  any
>;

// Get current year dynamically
const currentYear = new Date().getFullYear();

// Helper to convert "2504" to "April"
function getMonthLabel(ym: string): string {
  const month = parseInt(ym.slice(2), 10);
  return new Date(currentYear, month - 1).toLocaleString('en-US', {
    month: 'long',
  });
}

// Type definitions
type CruiseType = 'A' | 'C';
type CruiseTable = Record<CruiseType, Record<number, Record<string, string>>>;

// Build structured data
const cruiseTables: CruiseTable = {
  A: {},
  C: {},
};

for (const path in files) {
  const match = path.match(/\/(\d{4})([AC])(\d{2}A?|\d{2})\.json$/);
  if (!match) continue;

  const [, ym, type, suffix] = match;
  const points = suffixToPoints[suffix];
  if (!points) continue;

  const monthLabel = getMonthLabel(ym);
  const cruiseType = type as CruiseType;

  if (!cruiseTables[cruiseType][points]) cruiseTables[cruiseType][points] = {};
  cruiseTables[cruiseType][points][monthLabel] =
    path.split('/').pop()?.replace('.json', '') ?? '';
}

// Determine the two most recent months
const allMonths = Array.from(
  new Set(
    Object.values(cruiseTables).flatMap((group) =>
      Object.values(group).flatMap((byMonth) => Object.keys(byMonth))
    )
  )
).sort(
  (a, b) =>
    new Date(`1 ${a} ${currentYear}`).getTime() -
    new Date(`1 ${b} ${currentYear}`).getTime()
);
const recentMonths = allMonths.slice(-2);

// Define point levels in descending order
const pointLevels: number[] = [
  25000, 15000, 9000, 6500, 4000, 3000, 2000, 1500, 1200,
];
---

<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <title>Cruise Offers</title>
  </head>
  <body class='bg-white p-6'>
    <h1 class='text-5xl font-bold mb-4'>Cruise Offers by Casino Points</h1>

    <div class='mb-8 text-gray-700 leading-relaxed'>
      <p>
        Royal Caribbean's onboard casinos offer guests the opportunity to earn
        points through slot machines and table games. These points accumulate
        over the course of your sailing. Once you surpass certain thresholds,
        you're eligible for exclusive Next Cruise offers, which can include
        complimentary cruises, onboard credits, or other perks.
      </p>
      <p class='mt-4'>
        Offers are categorized based on the length of your cruise: sailings of 6
        nights or fewer and sailings of 7 nights or more. The tables below
        display the available offers for each category. Clicking on an offer
        code will provide more details, allowing you to filter and sort offers
        to find the best fit for your future cruises.
      </p>
    </div>

    <div class='grid grid-cols-1 md:grid-cols-2 gap-8'>
      {
        (['A', 'C'] as const).map((type) => (
          <div>
            <table class='w-full table-auto border border-gray-300'>
              <thead class='bg-gray-200'>
                <tr>
                  <th
                    colspan={recentMonths.length + 1}
                    class='px-4 py-2 text-left text-xl font-semibold bg-gray-100'
                  >
                    {type === 'A'
                      ? 'Cruises 6 Nights or Fewer'
                      : 'Cruises 7 Nights or More'}
                  </th>
                </tr>
                <tr>
                  <th class='px-4 py-2 text-center'>Casino Points Accrued</th>
                  {recentMonths.map((month) => (
                    <th class='px-4 py-2 text-center'>{month} Offers</th>
                  ))}
                </tr>
              </thead>
              <tbody>
                {pointLevels.map((points) => (
                  <tr>
                    <td class='border px-4 py-2 font-medium text-center'>
                      {points}
                    </td>
                    {recentMonths.map((month) => {
                      const filename = cruiseTables[type][points]?.[month];
                      return (
                        <td class='border px-4 py-2 text-center'>
                          {filename ? (
                            <a
                              href={`/details/${filename}`}
                              class='text-blue-600 font-semibold hover:underline hover:text-blue-400 cursor-pointer'
                            >
                              {filename}
                            </a>
                          ) : (
                            <span class='text-gray-400'>â€”</span>
                          )}
                        </td>
                      );
                    })}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        ))
      }
    </div>

    <div class='mt-10 text-center'>
      <p class='text-gray-700'>
        Interested in exploring past offers? Visit our <a
          href='/archive'
          class='text-blue-600 hover:underline hover:text-blue-400 cursor-pointer'
          >Offers Archive</a
        > for more information.
      </p>
    </div>
  </body>
</html>
